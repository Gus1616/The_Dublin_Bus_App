import { PropType } from "vue";
declare const langs: readonly ["ar", "bn", "cs", "da", "de", "el", "en", "es", "fa", "fi", "fil", "fr", "he", "hi", "hu", "id", "it", "ja", "ko", "msa", "nl", "no", "pl", "pt", "ro", "ru", "sv", "th", "tr", "uk", "ur", "vi", "zh-cn", "zh-tw"];
declare const _default: import("vue").DefineComponent<{
    /**
     The numerical ID of the desired Tweet.
     
     @example
       <TweetEmbed tweetId="20" />
     */
    tweetId: {
        type: StringConstructor;
        default: string;
    };
    /**
     The Tweet URL.

     @example
       <TweetEmbed tweetId="https://twitter.com/jack/status/20" />
     */
    tweetUrl: {
        type: StringConstructor;
        default: string;
    };
    /**
     * When set to none, only the cited Tweet will be displayed even if it is in reply to another Tweet.
     * @default "all"
     */
    conversation: {
        type: PropType<"all" | "none">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * When set to hidden, links in a Tweet are not expanded to photo, video, or link previews.
     * @default "visible"
     */
    cards: {
        type: PropType<"hidden" | "visible">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * The maximum width of the rendered Tweet in whole pixels. This value should be between 250 and 550 pixels.
     * @default "auto"
     */
    width: {
        type: PropType<number | "auto">;
        default: string;
        validator: (value: string | number) => boolean;
    };
    /**
     * Float the Tweet left, right, or center relative to its container. Typically set to allow text or other content to wrap around the Tweet.
     * @default undefined
     */
    align: {
        type: PropType<"center" | "left" | "right">;
        default: any;
        validator: (value: string | undefined) => boolean;
    };
    /**
     * When set to dark, displays Tweet with light text over a dark background.
     * @default "light"
     */
    theme: {
        type: PropType<"dark" | "light">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * A supported Twitter language code. Loads text components in the specified language. Note: does not affect the text of the cited Tweet.
     * @default "en"
     */
    lang: {
        type: PropType<"id" | "th" | "tr" | "no" | "ar" | "bn" | "cs" | "da" | "de" | "el" | "en" | "es" | "fa" | "fi" | "fil" | "fr" | "he" | "hi" | "hu" | "it" | "ja" | "ko" | "msa" | "nl" | "pl" | "pt" | "ro" | "ru" | "sv" | "uk" | "ur" | "vi" | "zh-cn" | "zh-tw">;
        default: string;
        validator: (value: (typeof langs)[number]) => boolean;
    };
    /**
     * When set to true, the Tweet and its embedded page on your site are not used for purposes that include personalized suggestions and personalized ads.
     * @default false
     */
    dnt: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    tweetContainerRef: import("vue").Ref<HTMLDivElement>;
    isLoading: import("vue").Ref<boolean>;
    hasError: import("vue").Ref<boolean>;
    attrs: {
        [x: string]: unknown;
    };
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "tweet-load-success": (twitterWidgetElement: HTMLDivElement) => boolean;
    "tweet-load-error": () => true;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     The numerical ID of the desired Tweet.
     
     @example
       <TweetEmbed tweetId="20" />
     */
    tweetId: {
        type: StringConstructor;
        default: string;
    };
    /**
     The Tweet URL.

     @example
       <TweetEmbed tweetId="https://twitter.com/jack/status/20" />
     */
    tweetUrl: {
        type: StringConstructor;
        default: string;
    };
    /**
     * When set to none, only the cited Tweet will be displayed even if it is in reply to another Tweet.
     * @default "all"
     */
    conversation: {
        type: PropType<"all" | "none">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * When set to hidden, links in a Tweet are not expanded to photo, video, or link previews.
     * @default "visible"
     */
    cards: {
        type: PropType<"hidden" | "visible">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * The maximum width of the rendered Tweet in whole pixels. This value should be between 250 and 550 pixels.
     * @default "auto"
     */
    width: {
        type: PropType<number | "auto">;
        default: string;
        validator: (value: string | number) => boolean;
    };
    /**
     * Float the Tweet left, right, or center relative to its container. Typically set to allow text or other content to wrap around the Tweet.
     * @default undefined
     */
    align: {
        type: PropType<"center" | "left" | "right">;
        default: any;
        validator: (value: string | undefined) => boolean;
    };
    /**
     * When set to dark, displays Tweet with light text over a dark background.
     * @default "light"
     */
    theme: {
        type: PropType<"dark" | "light">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * A supported Twitter language code. Loads text components in the specified language. Note: does not affect the text of the cited Tweet.
     * @default "en"
     */
    lang: {
        type: PropType<"id" | "th" | "tr" | "no" | "ar" | "bn" | "cs" | "da" | "de" | "el" | "en" | "es" | "fa" | "fi" | "fil" | "fr" | "he" | "hi" | "hu" | "it" | "ja" | "ko" | "msa" | "nl" | "pl" | "pt" | "ro" | "ru" | "sv" | "uk" | "ur" | "vi" | "zh-cn" | "zh-tw">;
        default: string;
        validator: (value: (typeof langs)[number]) => boolean;
    };
    /**
     * When set to true, the Tweet and its embedded page on your site are not used for purposes that include personalized suggestions and personalized ads.
     * @default false
     */
    dnt: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    "onTweet-load-success"?: (twitterWidgetElement: HTMLDivElement) => any;
    "onTweet-load-error"?: () => any;
}, {
    width: number | "auto";
    lang: "id" | "th" | "tr" | "no" | "ar" | "bn" | "cs" | "da" | "de" | "el" | "en" | "es" | "fa" | "fi" | "fil" | "fr" | "he" | "hi" | "hu" | "it" | "ja" | "ko" | "msa" | "nl" | "pl" | "pt" | "ro" | "ru" | "sv" | "uk" | "ur" | "vi" | "zh-cn" | "zh-tw";
    align: "center" | "left" | "right";
    tweetId: string;
    tweetUrl: string;
    conversation: "all" | "none";
    cards: "hidden" | "visible";
    theme: "dark" | "light";
    dnt: boolean;
}>;
export default _default;
